name: Build, Scan, and Push Docker Images

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
    paths:
      - "backend/**"
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 2 * * 1-5"

env:
  DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  POSTGRES_PORT: 5432
  SSL_MODE: require

jobs:
  build-scan-push:
    name: ${{ matrix.service.name }} (Multi-Arch)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service:
          - { name: "Auth", context: "./backend/Auth", dockerfile: "./backend/Auth/Dockerfile", image: "authentication-service" }
          - { name: "Chatbot", context: "./backend/chatbot", dockerfile: "./backend/chatbot/Dockerfile", image: "chatbot-service" }
          - { name: "History", context: "./backend/chatbot_history", dockerfile: "./backend/chatbot_history/Dockerfile", image: "chatbot-history-service" }
          - { name: "Vector", context: "./backend/vector_services", dockerfile: "./backend/vector_services/Dockerfile", image: "vector-service" }
    services:
      redis:
        image: redis/redis-stack-server:latest
        ports:
          - 6379:6379
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672

    steps:
      - uses: actions/checkout@v4
      
      # Setup multi-arch build capability
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64 

      # Extract SemVer version from tag
      - name: Extract version from tag
        id: extract_version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # Login to Docker Hub
      - uses: docker/login-action@v3
        if: github.event_name == 'push' || github.event_name == 'schedule'
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      # Build for multiple architectures
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          platforms: linux/amd64,linux/arm64
          tags: |
            lewis254/${{ matrix.service.image }}:latest
            lewis254/${{ matrix.service.image }}:${{ github.sha }}
            lewis254/${{ matrix.service.image }}:${{ steps.extract_version.outputs.version }}
          push: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Vulnerability scanning (trivy)
      - name: Scan for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: lewis254/${{ matrix.service.image }}:${{ github.sha || steps.extract_version.outputs.version || 'latest' }}
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
          vuln-type: 'os,library'