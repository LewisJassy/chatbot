name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"  # Triggers on SemVer tags (v1.0.0, v2.3.4, etc.)
    paths:
      - "backend/**"
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 2 * * 1-5"  # Weekdays at 2 AM UTC

env:
  DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  POSTGRES_PORT: 5432
  SSL_MODE: require

jobs:
  build-auth:
    name: Build Auth Service
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis/redis-stack-server:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Extract version from tag
        id: extract_version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - uses: docker/login-action@v3
        if: github.event_name == 'push' || github.event_name == 'schedule'
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: ./backend/Auth
          file: ./backend/Auth/Dockerfile
          tags: |
            lewis254/authentication-service:latest
            lewis254/authentication-service:${{ github.sha }}
            lewis254/authentication-service:${{ steps.extract_version.outputs.version != '' && steps.extract_version.outputs.version || github.sha }}
          push: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-chatbot:
    name: Build Chatbot Service
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis/redis-stack-server:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd="rabbitmq-diagnostics -q ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Extract version from tag
        id: extract_version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - uses: docker/login-action@v3
        if: github.event_name == 'push' || github.event_name == 'schedule'
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: ./backend/chatbot
          file: ./backend/chatbot/Dockerfile
          tags: |
            lewis254/chatbot-service:latest
            lewis254/chatbot-service:${{ github.sha }}
            lewis254/chatbot-service:${{ steps.extract_version.outputs.version != '' && steps.extract_version.outputs.version || github.sha }}
          push: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-history:
    name: Build Chatbot History Service
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis/redis-stack-server:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd="rabbitmq-diagnostics -q ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Extract version from tag
        id: extract_version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - uses: docker/login-action@v3
        if: github.event_name == 'push' || github.event_name == 'schedule'
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: ./backend/chatbot_history
          file: ./backend/chatbot_history/Dockerfile
          tags: |
            lewis254/chatbot-history-service:latest
            lewis254/chatbot-history-service:${{ github.sha }}
            lewis254/chatbot-history-service:${{ steps.extract_version.outputs.version != '' && steps.extract_version.outputs.version || github.sha }}
          push: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-vector:
    name: Build Vector Service
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis/redis-stack-server:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Extract version from tag
        id: extract_version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - uses: docker/login-action@v3
        if: github.event_name == 'push' || github.event_name == 'schedule'
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: ./backend/vector_services
          file: ./backend/vector_services/Dockerfile
          tags: |
            lewis254/vector-service:latest
            lewis254/vector-service:${{ github.sha }}
            lewis254/vector-service:${{ steps.extract_version.outputs.version != '' && steps.extract_version.outputs.version || github.sha }}
          push: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
